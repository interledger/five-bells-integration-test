#!/usr/bin/env node
'use strict'

const path = require('path')
const DependencyManager = require('five-bells-integration-test-loader').DependencyManager
const spawn = require('../util').spawn
const command = process.argv[2]
const dependencies = new DependencyManager({ defaultDependencies: {
  'ilp-connector': 'interledgerjs/ilp-connector',
  'ilp': 'interledgerjs/ilp',
  'ilp-plugin-mini-accounts': 'interledgerjs/ilp-plugin-mini-accounts',
  'ilp-plugin-btp': 'interledgerjs/ilp-plugin-btp'
  // 'ilp-kit': 'interledgerjs/ilp-kit'
}})
const commands = ['all', 'setup', 'test']
const mocha = path.resolve(require.resolve('mocha'), '../bin/mocha')

function usage () {
  console.error('usage: ' + process.argv[1] + ' <command> [-- <mocha arguments>]')
  console.error('commands:')
  console.error('  all    # setup then test')
  console.error('  setup  # download five-bells services')
  console.error('  test   # run integration tests.')
  console.error('example:')
  console.error('  $ integration test -- -g \'many hops\'')
  process.exit(1)
}

if (commands.indexOf(command) === -1) usage()

;(async function () {
  let code = 0
  if (command === 'all' || command === 'setup') {
    code = code || (await dependencies.install())
  }
  if (command === 'all' || command === 'test') {
    const sep = process.argv.indexOf('--') + 1
    const extra = sep ? process.argv.slice(sep) : []
    code = code || await spawn(mocha, [
      path.resolve(__dirname, '../tests/'),
      '--no-timeouts'
    ].concat(extra), {
      cwd: dependencies.testDir,
      stdio: 'inherit'
    })
  }
  process.exit(code)
})()
